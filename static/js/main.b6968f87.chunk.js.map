{"version":3,"sources":["images/sun.svg","images/rainy.svg","images/cloudy.svg","images/snow.svg","images/sunny-rainy.svg","images/thunder.svg","images/mist.svg","images/Preloader_2.gif","images/heart.svg","components/WeatherIcon.js","components/WeatherTab.js","components/WeatherChart.js","components/StartScreen.js","index.js"],"names":["module","exports","weatherArray","sunny","thunder","sunnyRain","rainy","snow","mist","cloudy","WeatherIcon","props","state","weather","this","id","src","alt","Math","floor","React","Component","WEEKDAY","WeatherTab","forecast","forcast","forecastDate","Date","dt","getDate","setState","day","getDay","className","trunc","temp","length","main","WeatherChart","temperatures","series","map","slice","hours","d","getHours","getMinutes","name","data","options","chart","type","zoom","enabled","toolbar","show","dataLabels","stroke","curve","width","markers","size","yasxis","labels","axisTicks","axisBorder","title","text","xaxis","categories","grid","lines","yaxis","StartScreen","Preloader","WeatherApp","lat","lon","currWeather","undefined","hourly","daily","fetch","then","res","json","result","current","error","console","log","currentComponent","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getWeather","description","charAt","toUpperCase","style","paddingLeft","idx","key","padding","Heart","height","verticalAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6968f87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sun.ef790a4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.5ee170bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.cfb1e955.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.20df6662.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny-rainy.23e71edd.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.4b969a4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/mist.cb7f1d95.svg\";","module.exports = __webpack_public_path__ + \"static/media/Preloader_2.a8c98ef9.gif\";","module.exports = __webpack_public_path__ + \"static/media/heart.095cbef3.svg\";","import React from 'react';\nimport sunny from '../images/sun.svg';\nimport rainy from '../images/rainy.svg';\nimport cloudy from '../images/cloudy.svg';\nimport snow from '../images/snow.svg';\nimport sunnyRain from '../images/sunny-rainy.svg';\nimport thunder from '../images/thunder.svg';\nimport mist from '../images/mist.svg';\n\n\nconst weatherArray = [\n    sunny,\n    sunny,\n    thunder,\n    sunnyRain,\n    sunny,\n    rainy,\n    snow,\n    mist,\n    cloudy\n]\n\nclass WeatherIcon extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            weather: this.props.weather\n        }\n    }\n\n\n    render() {\n        if(this.state.weather.id === 800) {\n            return(<img src={sunny} alt=\"Sunny\"/>)\n        }else{\n            return(<img src={weatherArray[Math.floor(this.state.weather.id/100)]} alt=\"Weather Icon\"/>)\n        }\n    }\n}\n\nexport default WeatherIcon","import React from 'react';\nimport '../index.css';\nimport WeatherIcon from './WeatherIcon'\n\nconst WEEKDAY = [\n    \"Sun.\",\n    \"Mon.\",\n    \"Tue.\",\n    \"Wed.\",\n    \"Thu.\",\n    \"Fri.\",\n    \"Sat.\"\n]\n\nclass WeatherTab extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            forecast: this.props.forcast\n        }\n    }\n\n    componentDidMount() {\n        var forecastDate = new Date(this.state.forecast.dt * 1000);\n        var today = new Date()\n        if(today.getDate() === forecastDate.getDate()) {\n            this.setState({\n                day: \"Today\"\n            })\n        }else{\n            this.setState({\n                day: WEEKDAY[forecastDate.getDay()]\n            })\n        }\n    }\n\n    render() {\n    return (\n        <div className={ this.state.day === \"Today\" ? \"neu neu-selected tab\" : \"neu tab\"}>\n            <div className=\"day\">{this.state.day}</div>\n            <div className=\"temp\">{Math.trunc(this.state.forecast.temp.day)}&#176;</div>\n            <div>\n                { this.state.forecast.weather.length > 0 ? <span className=\"stat\">{this.state.forecast.weather[0].main}</span> : \"\" }\n                { this.state.forecast.weather.length > 0 ? <WeatherIcon weather={this.state.forecast.weather[0]} /> : \"\" }\n            </div>\n        </div>\n    );\n    }\n}\n\nexport default WeatherTab;","import React from 'react';\nimport ReactApexCharts from 'react-apexcharts'\n\nclass WeatherChart extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        var temperatures = this.props.series.map(forecast => Math.trunc(forecast.temp)).slice(0, 6);\n        var hours = this.props.series.map(forecast => new Date(forecast.dt * 1000)).slice(0, 6);\n\n        hours = hours.map(d => (d.getHours() + \":\" + d.getMinutes()))\n\n        this.state = {\n        \n            series: [{\n                name: \"Temperature\",\n                data: temperatures\n            }],\n            options: {\n                chart: {\n                    type: 'line',\n                    zoom: {\n                        enabled: false\n                    },\n                    toolbar: {\n                        show: false\n                    }\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    curve: 'straight',\n                    width: 3\n                },\n                markers: {\n                    size: 5\n                },\n                yasxis: {\n                    labels: {\n                        show: false\n                    },\n                    axisTicks: {\n                        show: false\n                    },\n                    axisBorder: {\n                        show: false\n                    },\n                    title: {\n                        text: \"\"\n                    }\n                },\n                xaxis: {\n                    type: 'category',\n                    show: false,\n                    categories: hours,\n                    labels: {\n                        show: true\n                    }\n                },\n                grid: {\n                    xaxis: {\n                        lines: {\n                            show: false\n                        }\n                    },\n                    yaxis: {\n                        lines: {\n                            show: false\n                        }\n                    }\n                }\n            },\n        \n        \n        };\n    }\n\n    render() {\n        return (\n            <div id=\"chart\">\n                <ReactApexCharts options={this.state.options} series={this.state.series} type=\"line\"  />\n            </div>\n        );\n    }\n}\n\nexport default WeatherChart;","import React from 'react';\nimport Preloader from '../images/Preloader_2.gif'\nimport '../index.css';\n\nclass StartScreen extends React.Component {\n    render() {\n        return(\n            <div className=\"startContainer\">\n                <div className=\"inner\">\n                    <img src={Preloader} alt=\"Loading\" />\n                    <div>Fetching Weather data</div>\n                    <div className=\"details\">Make sure to give location access.</div>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default StartScreen","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WeatherTab from './components/WeatherTab'\nimport WeatherChart from './components/WeatherChart'\nimport WeatherIcon from './components/WeatherIcon'\nimport StartScreen from './components/StartScreen'\nimport Heart from './images/heart.svg'\nimport './index.css';\n\nconst appid = \"c3e7f513320bbb800b120a1b8adacc8f\"\n\nclass WeatherApp extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            lat: 0,\n            lon: 0,\n            currWeather: undefined,\n            hourly: undefined,\n            daily: undefined\n        }\n    }\n\n    getWeather(lat, lon) {\n        fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=\" + lat + \"&lon=\" + lon + \"&appid=\" + appid + \"&units=metric\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    currWeather: result.current,\n                    hourly: result.hourly,\n                    daily: result.daily,\n                })\n            },\n            (error) => {\n                console.log(error)\n            }\n        )\n    }\n\n    componentDidMount() {\n        let currentComponent = this\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(function(position) {\n                currentComponent.setState({\n                    lat: position.coords.latitude,\n                    lon: position.coords.longitude\n                })\n\n                currentComponent.getWeather(position.coords.latitude, position.coords.longitude)\n            });\n        } else {\n            console.log(\"Not Available\");\n        }\n    }\n\n    render() {\n        if(this.state.currWeather && this.state.hourly && this.state.daily) {\n            return (\n                <div className=\"container\">\n                    <div className=\"mainTempContainer\">\n                        <div className=\"mainTempLeft\">\n                            <div className=\"mainTemp\">\n                                {Math.trunc(this.state.currWeather.temp)}&#176;\n                            </div>\n                            <div className=\"mainTempText\">\n                                {this.state.currWeather.weather.length > 0 ? this.state.currWeather.weather[0].description.charAt(0).toUpperCase() + this.state.currWeather.weather[0].description.slice(1) : \"\"}\n                            </div>\n                        </div>\n                        <div className=\"mainTempRight\">\n                            {this.state.currWeather.weather.length > 0 ? <WeatherIcon weather={this.state.currWeather.weather[0]}/> : \"\" }\n                        </div>\n                    </div>\n                    \n                    <div style={{paddingLeft: \"20px\"}}>\n                        <div className=\"weatherTabsContainer\">\n                            {this.state.daily.map((forecast, idx) => <WeatherTab forcast={forecast} key={idx} />)}\n                            \n                            <div style={{padding: \"10px\"}}></div>\n                        </div>\n                    </div>\n                    \n        \n                    <div className=\"detailsContainer\">\n                        <div className=\"neu\">\n                            <WeatherChart series={this.state.hourly} />\n                        </div>\n                        <div className=\"footer\">\n                            Created with <img src={Heart} style={{height: \"1em\", verticalAlign: \"middle\"}} /> by Shubhomoy\n                        </div>\n                    </div>\n                </div>\n            );\n        }else{\n            return (\n                <StartScreen />\n            )\n        }\n    }\n}\n\n\n\n\nReactDOM.render(\n    <WeatherApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}